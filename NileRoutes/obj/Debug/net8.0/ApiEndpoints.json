[
  {
    "ContainingType": "NileRoutes.Controllers.AuthenticationController",
    "Method": "Login",
    "RelativePath": "api/Authentication/Login",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "loginRequestDto",
        "Type": "NileRoutes.Models.Dtos.AuthDto.LoginRequestDto",
        "IsRequired": true
      },
      {
        "Name": "api-version",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "x-api-version",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "NileRoutes.Controllers.AuthenticationController",
    "Method": "Register",
    "RelativePath": "api/Authentication/Register",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "registerRequestDto",
        "Type": "NileRoutes.Models.Dtos.AuthDto.RegisterRequestDto",
        "IsRequired": true
      },
      {
        "Name": "api-version",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "x-api-version",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "NileRoutes.Controllers.ImagesController",
    "Method": "UplaodImage",
    "RelativePath": "api/Images/Upload",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "File",
        "Type": "Microsoft.AspNetCore.Http.IFormFile",
        "IsRequired": false
      },
      {
        "Name": "FileName",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "FileDescription",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "api-version",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "x-api-version",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "NileRoutes.Controllers.RegionsController",
    "Method": "GetAllRegions",
    "RelativePath": "api/Regions",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "api-version",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "x-api-version",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "NileRoutes.Controllers.RegionsController",
    "Method": "CreateRegion",
    "RelativePath": "api/Regions",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "addRegion",
        "Type": "NileRoutes.Models.Dtos.RegionDto.AddRegionRequestDto",
        "IsRequired": true
      },
      {
        "Name": "api-version",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "x-api-version",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "NileRoutes.Controllers.RegionsController",
    "Method": "GetRegionById",
    "RelativePath": "api/Regions/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "api-version",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "x-api-version",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "NileRoutes.Controllers.RegionsController",
    "Method": "UpdateRegion",
    "RelativePath": "api/Regions/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "updateRegion",
        "Type": "NileRoutes.Models.Dtos.RegionDto.UpdateRegionRequestDto",
        "IsRequired": true
      },
      {
        "Name": "api-version",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "x-api-version",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "NileRoutes.Controllers.RegionsController",
    "Method": "DeleteRegion",
    "RelativePath": "api/Regions/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "api-version",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "x-api-version",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "NileRoutes.Controllers.WalksController",
    "Method": "CreateWalkAsync",
    "RelativePath": "api/v1/Walks",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "addWalk",
        "Type": "NileRoutes.Models.Dtos.WalkDto.AddWalkRequestDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "NileRoutes.Controllers.WalksController",
    "Method": "GetAllWalksAsync",
    "RelativePath": "api/v1/Walks",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "filterOn",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "filterQuery",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "sortBy",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "isAscending",
        "Type": "System.Nullable\u00601[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      },
      {
        "Name": "pageNumber",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "pageSize",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "NileRoutes.Controllers.WalksController",
    "Method": "GetWalkByIdAsync",
    "RelativePath": "api/v1/Walks/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "NileRoutes.Controllers.WalksController",
    "Method": "UpdateWalkAsync",
    "RelativePath": "api/v1/Walks/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "updateWalk",
        "Type": "NileRoutes.Models.Dtos.WalkDto.UpdateWalkRequestDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "NileRoutes.Controllers.WalksController",
    "Method": "DeleteWalkAsync",
    "RelativePath": "api/v1/Walks/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "NileRoutes.Controllers.WalksV2Controller",
    "Method": "CreateWalkAsync",
    "RelativePath": "api/v2/WalksV",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "addWalk",
        "Type": "NileRoutes.Models.Dtos.WalkDto.AddWalkRequestDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "NileRoutes.Controllers.WalksV2Controller",
    "Method": "GetAllWalksAsync",
    "RelativePath": "api/v2/WalksV",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "filterOn",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "filterQuery",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "sortBy",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "isAscending",
        "Type": "System.Nullable\u00601[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      },
      {
        "Name": "pageNumber",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "pageSize",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "NileRoutes.Controllers.WalksV2Controller",
    "Method": "GetWalkByIdAsync",
    "RelativePath": "api/v2/WalksV/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "NileRoutes.Controllers.WalksV2Controller",
    "Method": "UpdateWalkAsync",
    "RelativePath": "api/v2/WalksV/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "updateWalk",
        "Type": "NileRoutes.Models.Dtos.WalkDto.UpdateWalkRequestDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "NileRoutes.Controllers.WalksV2Controller",
    "Method": "DeleteWalkAsync",
    "RelativePath": "api/v2/WalksV/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  }
]